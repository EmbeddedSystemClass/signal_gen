---------------------------------------------------------------------------------------
-- Title          : Wishbone slave core for Fine Delay WB
---------------------------------------------------------------------------------------
-- File           : fd_registers_pkg.vhd
-- Author         : auto-generated by wbgen2 from fine_delay_wb.wb
-- Created        : Mon May 30 19:41:22 2011
-- Standard       : VHDL'87
---------------------------------------------------------------------------------------
-- THIS FILE WAS GENERATED BY wbgen2 FROM SOURCE FILE fine_delay_wb.wb
-- DO NOT HAND-EDIT UNLESS IT'S ABSOLUTELY NECESSARY!
---------------------------------------------------------------------------------------

library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.wbgen2_pkg.all;

package fd_wbgen2_pkg is
  type t_fd_registers is record
    rstr_o                                   : std_logic_vector(31 downto 0);
    rstr_wr_o                                : std_logic;
    gcr_bypass_o                             : std_logic;
    gcr_input_en_o                           : std_logic;
    gcr_clr_stat_o                           : std_logic;
    tar_data_o                               : std_logic_vector(27 downto 0);
    tar_data_i                               : std_logic_vector(27 downto 0);
    tar_data_load_o                          : std_logic;
    tar_addr_o                               : std_logic_vector(3 downto 0);
    tdcsr_write_o                            : std_logic;
    tdcsr_read_o                             : std_logic;
    tdcsr_err_i                              : std_logic;
    tdcsr_int_i                              : std_logic;
    tdcsr_load_i                             : std_logic;
    tdcsr_empty_i                            : std_logic;
    tdcsr_start_dis_o                        : std_logic;
    tdcsr_start_en_o                         : std_logic;
    tdcsr_stop_dis_o                         : std_logic;
    tdcsr_stop_en_o                          : std_logic;
    dcr_dly_sel_o                            : std_logic_vector(3 downto 0);
    dcr_dly_sel_wr_o                         : std_logic;
    dcr_dly_val_o                            : std_logic_vector(9 downto 0);
    gpsr_cs_pll_o                            : std_logic;
    gpsr_cs_pll_wr_o                         : std_logic;
    gpsr_cs_gpio_o                           : std_logic;
    gpsr_cs_gpio_wr_o                        : std_logic;
    gpsr_sclk_o                              : std_logic;
    gpsr_sclk_wr_o                           : std_logic;
    gpsr_mosi_o                              : std_logic;
    gpsr_mosi_wr_o                           : std_logic;
    gpcr_cs_pll_o                            : std_logic;
    gpcr_cs_pll_wr_o                         : std_logic;
    gpcr_cs_gpio_o                           : std_logic;
    gpcr_cs_gpio_wr_o                        : std_logic;
    gpcr_sclk_o                              : std_logic;
    gpcr_sclk_wr_o                           : std_logic;
    gpcr_mosi_o                              : std_logic;
    gpcr_mosi_wr_o                           : std_logic;
    gprr_miso_i                              : std_logic;
    iecraw_i                                 : std_logic_vector(31 downto 0);
    iectag_i                                 : std_logic_vector(31 downto 0);
    iepd_i                                   : std_logic_vector(7 downto 0);
    pgcr_period_o                            : std_logic_vector(30 downto 0);
    pgcr_enable_o                            : std_logic;
    tsfifo_wr_req_i                          : std_logic;
    tsfifo_wr_full_o                         : std_logic;
    tsfifo_utc_i                             : std_logic_vector(31 downto 0);
    tsfifo_coarse_i                          : std_logic_vector(27 downto 0);
    tsfifo_frac_i                            : std_logic_vector(22 downto 0);
    tsfifo_frac_raw_i                        : std_logic_vector(22 downto 0);
    end record;
  
  constant c_fd_registers_init_value: t_fd_registers := (
    rstr_o => (others => 'Z'),
    rstr_wr_o => 'Z',
    gcr_bypass_o => 'Z',
    gcr_input_en_o => 'Z',
    gcr_clr_stat_o => 'Z',
    tar_data_o => (others => 'Z'),
    tar_data_i => (others => 'Z'),
    tar_data_load_o => 'Z',
    tar_addr_o => (others => 'Z'),
    tdcsr_write_o => 'Z',
    tdcsr_read_o => 'Z',
    tdcsr_err_i => 'Z',
    tdcsr_int_i => 'Z',
    tdcsr_load_i => 'Z',
    tdcsr_empty_i => 'Z',
    tdcsr_start_dis_o => 'Z',
    tdcsr_start_en_o => 'Z',
    tdcsr_stop_dis_o => 'Z',
    tdcsr_stop_en_o => 'Z',
    dcr_dly_sel_o => (others => 'Z'),
    dcr_dly_sel_wr_o => 'Z',
    dcr_dly_val_o => (others => 'Z'),
    gpsr_cs_pll_o => 'Z',
    gpsr_cs_pll_wr_o => 'Z',
    gpsr_cs_gpio_o => 'Z',
    gpsr_cs_gpio_wr_o => 'Z',
    gpsr_sclk_o => 'Z',
    gpsr_sclk_wr_o => 'Z',
    gpsr_mosi_o => 'Z',
    gpsr_mosi_wr_o => 'Z',
    gpcr_cs_pll_o => 'Z',
    gpcr_cs_pll_wr_o => 'Z',
    gpcr_cs_gpio_o => 'Z',
    gpcr_cs_gpio_wr_o => 'Z',
    gpcr_sclk_o => 'Z',
    gpcr_sclk_wr_o => 'Z',
    gpcr_mosi_o => 'Z',
    gpcr_mosi_wr_o => 'Z',
    gprr_miso_i => 'Z',
    iecraw_i => (others => 'Z'),
    iectag_i => (others => 'Z'),
    iepd_i => (others => 'Z'),
    pgcr_period_o => (others => 'Z'),
    pgcr_enable_o => 'Z',
    tsfifo_wr_req_i => 'Z',
    tsfifo_wr_full_o => 'Z',
    tsfifo_utc_i => (others => 'Z'),
    tsfifo_coarse_i => (others => 'Z'),
    tsfifo_frac_i => (others => 'Z'),
    tsfifo_frac_raw_i => (others => 'Z')
  );
end package;
